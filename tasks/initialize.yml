---

- name: ({{ ansible_distribution }}) Define Commons facts
  set_fact:
   community_edition: "{{ docker_install_community }}"
   os_with_version: "{{ ansible_distribution }} {{ ansible_distribution_major_version }}"
   os_family: "{{ ansible_os_family }}"
   os_major_release: "{{ ansible_distribution_major_version }}"
   os_release: "{{ ansible_distribution_version }}"
   os_arch: "{{ docker_os_architecture }}"
   os_distribution: "{{ ansible_distribution }}"
   os_codename: "{{ ansible_distribution_release }}"
   docker_data_dir_override: "{{ docker_data_dir != docker_default_data_dir }}"
   uname: "{{ ansible_system }}"

- name: ({{ os_with_version }}) Check OS Requirement
  fail:
   msg: "CentOS 6 n'est pas supporté par docker"
  when:
   - ansible_distribution == "CentOS"
   - ansible_distribution_major_version == 6

- name: ({{ os_with_version }}) Check current Docker version.
  command: >
    docker --version
  changed_when: false
  failed_when: false
  check_mode: false
  register: docker_version_res

- name: ({{ os_with_version }}) Check Compose Requirement
  fail:
   msg: "Veuillez renseigner la version de docker compose à installer"
  when:
   - install_compose is defined
   - install_compose
   - (compose_version is not defined) or (compose_version|trim|length == 0)

- name: ({{ os_with_version }}) Define Docker Commons fact
  set_fact:
   docker_already_installed: "{{ docker_version_res.rc == 0 }}"

- name: ({{ os_with_version }}) Extract current installed Docker version
  set_fact:
   docker_installed_version: "{{ docker_version_res.stdout_lines[0].split(' ')[2] }}"
   docker_installed_version_major: "{{ docker_version_res.stdout_lines[0].split(' ')[2].split('.')[0] }}"
   docker_installed_version_minor: "{{ docker_version_res.stdout_lines[0].split(' ')[2].split('.')[1] }}"
   docker_installed_version_patch: "{{ docker_version_res.stdout_lines[0].split(' ')[2].split('.')[2] }}"
  when:
   - docker_already_installed|bool

- name: ({{ os_with_version }}) Role checks for Enterprise Edition
  block:

   - name: ({{ os_with_version }}) Check Docker EE URL (Fail if not defined)
     fail:
      msg: "Vérifier les paramètres obligatoires : (docker_ee_url)"
     when: >
      docker_ee_url is not defined and docker_ee_url|trim|length > 0

  when: not community_edition|bool

- name: ({{ os_with_version }}) Role initialisations for Community Edition
  block:

   - name: ({{ os_with_version }}) Docker version suffix facts for Ubuntu
     set_fact:
      docker_version_separator: "{{ '=' if (ansible_distribution == 'Ubuntu') \
      else '-' if (ansible_distribution == 'CentOS') \
      else '' }}"

   - name: ({{ os_with_version }}) Docker version suffix facts for Ubuntu
     set_fact:
      docker_version_suffix: "{{ docker_version_separator + docker_version \
      if (docker_version is defined and docker_version|trim|length > 0) else '' }}"

   - name: ({{ os_with_version }}) Packages facts for Ubuntu
     set_fact:
      docker_required_packages: "{{ required_packages | default(['apt-transport-https', 'curl', \
      'ca-certificates', 'gnupg-agent', 'software-properties-common']) }}"
      docker_deleted_packages: "{{ deleted_packages | default(['docker', 'docker-engine', \
      'docker.io', 'containerd', 'runc']) }}"
      docker_gpg_key: "{{ gpg_key | default('https://download.docker.com/linux/ubuntu/gpg') }}"
      docker_gpg_key_fingerpring: "{{ gpg_key_fingerprint | default('9DC858229FC7DD38854AE2D88D81803C0EBFCD88') }}"
      docker_repository_baseurl: "{{ repository_baseurl | \
      default('https://download.docker.com/linux/ubuntu') }}"
      docker_packages: "{{ packages | default(['docker-ce' + docker_version_suffix, \
      'docker-ce-cli' + docker_version_suffix, 'containerd.io']) }}"
      docker_service_file: "/etc/systemd/system/docker.service"
     when:
      - ansible_distribution == "Ubuntu"

   - name: ({{ os_with_version }}) Packages facts for CentOS (7+)
     set_fact:
      docker_required_packages: "{{ required_packages | default(['yum-utils', 'lvm2', \
      'device-mapper-persistent-data']) }}"
      docker_deleted_packages: "{{ deleted_packages | default(['docker', 'docker-client', \
      'docker-client-latest', 'docker-common', 'docker-client-latest', 'docker-latest', \
      'docker-latest-logrotate', 'docker-logrotate', 'docker-selinux', 'docker-engine-selinux',\
      'docker-engine']) }}"
      docker_repository_file: "{{ repository_file | \
      default('https://download.docker.com/linux/centos/docker-ce.repo') }}"
      docker_packages: "{{ packages | default(['docker-ce' + docker_version_suffix, \
      'docker-ce-cli' + docker_version_suffix, 'containerd.io']) }}"
      docker_service_file: "/usr/lib/systemd/system/docker.service"
      docker_customization_script_dest_path: "/tmp/customization.sh"
     when:
      - ansible_distribution == "CentOS"

  when: community_edition|bool

- name: ({{ os_with_version }}) Ensure docker data dir is created
  file:
   path: "{{ docker_data_dir }}"
   state: directory
   mode: u+rwx,g+x,o+x
  when:
   - docker_data_dir_override|bool
  tags:
   - molecule-idempotence-notest

- name: ({{ os_with_version }}) Ensure docker initialization script dir is created
  file:
   path: "{{ docker_customization_script_dest_path | dirname }}"
   state: directory
  when:
   - docker_customization_script_source_path | length > 0

- name: ({{ ansible_distribution }}) - Copy the customization script file
  copy:
   src: "{{ docker_customization_script_source_path }}"
   dest: "{{ docker_customization_script_dest_path }}"
   mode: a+rwx
  when:
   - docker_customization_script_source_path | length > 0

- name: ({{ os_with_version }}) Installation Initialized facts [Recap]
  debug:
   msg:
    - "OS System                    : {{ uname }}"
    - "OS Architecture              : {{ os_arch }}"
    - "OS Family                    : {{ os_family }}"
    - "OS Distribution              : {{ os_distribution }}"
    - "OS Code Name                 : {{ os_codename }}"
    - "OS Major Version             : {{ os_major_release }}"
    - "OS Full Version              : {{ os_release }}"
    - "-----------------------------"
    - "-----------------------------"
    - "Install Community Edition ?  : {{ community_edition }}"
    - "Install Compose ?            : {{ docker_install_compose }}"
    - "Docker Already Installed     : {{ docker_already_installed }}"
    - "Docker Installed Version     : {{ docker_installed_version | default('NaN') }}"
    - "Docker version suffix        : {{ docker_version_suffix | default('Latest') }}"
    - "Docker Required Packages     : {{ docker_required_packages }}"
    - "Docker Deleted Packages      : {{ docker_deleted_packages }}"
    - "Docker Packages              : {{ docker_packages }}"
    - "Docker GPG KEY               : {{ docker_gpg_key | default('NaN') }}"
    - "Docker GPG Fingerpring       : {{ docker_gpg_key_fingerpring | default('NaN') }}"
    - "Docker Repository File       : {{ docker_repository_file | default('NaN') }}"
    - "Docker Repository Names      : {{ docker_repository_name | default('NaN') }}"
    - "Docker Enterprise URL        : {{ docker_ee_url | default('NaN') }}"
    - "Docker Compose Version       : {{ docker_compose_version }}"
    - "Docker Compose URL           : {{ docker_compose_url }}"
    - "Docker Compose Checksum      : {{ docker_compose_checksum }}"
    - "-----------------------------"
    - "-----------------------------"
    - "Docker Data Dir              : {{ docker_data_dir }}"
    - "Docker Default Data Dir      : {{ docker_default_data_dir }}"
